/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * This is a continuation of ngx-popover
 * @Reference {github} https://github.com/pleerock/ngx-popover
 */
import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Renderer2, ViewChild, } from '@angular/core';
import { PopoverPlacement } from './popover.placement';
var PopoverContentComponent = /** @class */ (function () {
    // -------------------------------------------------------------------------
    // Constructor
    // -------------------------------------------------------------------------
    function PopoverContentComponent(element, cdr, renderer) {
        var _this = this;
        this.element = element;
        this.cdr = cdr;
        this.renderer = renderer;
        this.placement = PopoverPlacement.Top;
        this.animation = true;
        this.closeOnClickOutside = false;
        this.closeOnMouseOutside = false;
        this.size = 'small';
        this.onCloseFromOutside = new EventEmitter();
        this.top = -10000;
        this.left = -10000;
        this.isIn = false;
        this.displayType = 'none';
        this.opacity = 0;
        this.transitionEnabled = false;
        this.windowWidth = window.innerWidth;
        this.windowHeight = window.innerHeight;
        // -------------------------------------------------------------------------
        // Anonymous
        // -------------------------------------------------------------------------
        /**
         * Closes dropdown if user clicks outside of this directive.
         */
        this.onDocumentMouseDown = (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            /** @type {?} */
            var element = _this.element.nativeElement;
            if (!element || !_this.popover) {
                return;
            }
            if (element.contains(event.target) || _this.popover.getElement().contains(event.target)) {
                return;
            }
            _this.onCloseFromOutside.emit(undefined);
        });
    }
    // -------------------------------------------------------------------------
    // Lifecycle callbacks
    // -------------------------------------------------------------------------
    // -------------------------------------------------------------------------
    // Lifecycle callbacks
    // -------------------------------------------------------------------------
    /**
     * @return {?}
     */
    PopoverContentComponent.prototype.ngAfterViewInit = 
    // -------------------------------------------------------------------------
    // Lifecycle callbacks
    // -------------------------------------------------------------------------
    /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.closeOnClickOutside) {
            this.listenClickFunc = this.renderer.listen('document', 'mousedown', (/**
             * @param {?} event
             * @return {?}
             */
            function (event) { return _this.onDocumentMouseDown(event); }));
        }
        if (this.closeOnMouseOutside) {
            this.listenMouseFunc = this.renderer.listen('document', 'mouseover', (/**
             * @param {?} event
             * @return {?}
             */
            function (event) { return _this.onDocumentMouseDown(event); }));
        }
        // Always close on mobile touch event outside.
        this.listenTouchFunc = this.renderer.listen('document', 'touchstart', (/**
         * @param {?} event
         * @return {?}
         */
        function (event) { return _this.onDocumentMouseDown(event); }));
        this.show();
        this.cdr.detectChanges();
    };
    /**
     * @return {?}
     */
    PopoverContentComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.closeOnClickOutside && this.listenClickFunc) {
            this.listenClickFunc();
        }
        if (this.closeOnMouseOutside && this.listenMouseFunc) {
            this.listenMouseFunc();
        }
        if (!!this.listenTouchFunc) {
            this.listenTouchFunc();
        }
    };
    // -------------------------------------------------------------------------
    // Public Methods
    // -------------------------------------------------------------------------
    // -------------------------------------------------------------------------
    // Public Methods
    // -------------------------------------------------------------------------
    /**
     * @return {?}
     */
    PopoverContentComponent.prototype.updatePosition = 
    // -------------------------------------------------------------------------
    // Public Methods
    // -------------------------------------------------------------------------
    /**
     * @return {?}
     */
    function () {
        // if visible, reposition
        if (this.opacity) {
            /** @type {?} */
            var p = this.positionElements(this.popover.getElement(), this.popoverDiv.nativeElement, this.placement, this.appendToBody);
            this.top = p.top;
            this.left = p.left;
        }
    };
    /**
     * @return {?}
     */
    PopoverContentComponent.prototype.show = /**
     * @return {?}
     */
    function () {
        if (!this.popover || !this.popover.getElement()) {
            return;
        }
        /** @type {?} */
        var p = this.positionElements(this.popover.getElement(), this.popoverDiv.nativeElement, this.placement, this.appendToBody);
        this.displayType = 'block';
        this.top = p.top;
        this.left = p.left;
        this.isIn = true;
        this.transitionEnabled = true;
        this.opacity = 1;
    };
    /**
     * @return {?}
     */
    PopoverContentComponent.prototype.hide = /**
     * @return {?}
     */
    function () {
        this.top = -10000;
        this.left = -10000;
        this.isIn = true;
        this.popover.hide();
    };
    /**
     * @return {?}
     */
    PopoverContentComponent.prototype.hideFromPopover = /**
     * @return {?}
     */
    function () {
        this.top = -10000;
        this.left = -10000;
        this.isIn = true;
        this.transitionEnabled = false;
        this.opacity = 0;
    };
    // -------------------------------------------------------------------------
    // Protected Methods
    // -------------------------------------------------------------------------
    // -------------------------------------------------------------------------
    // Protected Methods
    // -------------------------------------------------------------------------
    /**
     * @protected
     * @param {?} hostEl
     * @param {?} targetEl
     * @param {?} positionStr
     * @param {?=} appendToBody
     * @return {?}
     */
    PopoverContentComponent.prototype.positionElements = 
    // -------------------------------------------------------------------------
    // Protected Methods
    // -------------------------------------------------------------------------
    /**
     * @protected
     * @param {?} hostEl
     * @param {?} targetEl
     * @param {?} positionStr
     * @param {?=} appendToBody
     * @return {?}
     */
    function (hostEl, targetEl, positionStr, appendToBody) {
        if (appendToBody === void 0) { appendToBody = false; }
        /** @type {?} */
        var positionStrParts = ((/** @type {?} */ (positionStr))).split(' ');
        /** @type {?} */
        var pos0 = positionStrParts[0];
        /** @type {?} */
        var pos1 = positionStrParts[1] || 'center';
        /** @type {?} */
        var hostElPos = appendToBody ? this.offset(hostEl) : this.position(hostEl);
        /** @type {?} */
        var targetElWidth = targetEl.offsetWidth;
        /** @type {?} */
        var targetElHeight = targetEl.offsetHeight;
        this.effectivePlacement = pos0 = this.getEffectivePlacement(pos0, hostEl, targetEl);
        /** @type {?} */
        var shiftWidth = {
            center: (/**
             * @return {?}
             */
            function () {
                return hostElPos.left + hostElPos.width / 2 - targetElWidth / 2;
            }),
            left: (/**
             * @return {?}
             */
            function () {
                return hostElPos.left;
            }),
            right: (/**
             * @return {?}
             */
            function () {
                return hostElPos.left + hostElPos.width;
            }),
            topOrBottomRight: (/**
             * @return {?}
             */
            function () {
                return hostElPos.left + hostElPos.width / 2;
            }),
            topOrBottomLeft: (/**
             * @return {?}
             */
            function () {
                return hostElPos.left - targetElWidth + hostElPos.width / 2;
            })
        };
        /** @type {?} */
        var shiftHeight = {
            center: (/**
             * @return {?}
             */
            function () {
                return hostElPos.top + hostElPos.height / 2 - targetElHeight / 2;
            }),
            top: (/**
             * @return {?}
             */
            function () {
                return hostElPos.top;
            }),
            bottom: (/**
             * @return {?}
             */
            function () {
                return hostElPos.top + hostElPos.height;
            })
        };
        /** @type {?} */
        var targetElPos;
        switch (pos0) {
            case PopoverPlacement.Right:
                targetElPos = {
                    top: shiftHeight[pos1](),
                    left: shiftWidth[pos0]()
                };
                break;
            case PopoverPlacement.Left:
                targetElPos = {
                    top: shiftHeight[pos1](),
                    left: hostElPos.left - targetElWidth
                };
                break;
            case PopoverPlacement.Bottom:
                targetElPos = {
                    top: shiftHeight[pos0](),
                    left: shiftWidth[pos1]()
                };
                break;
            case PopoverPlacement.TopLeft:
                targetElPos = {
                    top: hostElPos.top - targetElHeight,
                    left: shiftWidth['topOrBottomLeft']()
                };
                break;
            case PopoverPlacement.TopRight:
                targetElPos = {
                    top: hostElPos.top - targetElHeight,
                    left: shiftWidth['topOrBottomRight']()
                };
                break;
            case PopoverPlacement.BottomLeft:
                targetElPos = {
                    top: shiftHeight[PopoverPlacement.Bottom](),
                    left: shiftWidth['topOrBottomLeft']()
                };
                break;
            case PopoverPlacement.BottomRight:
                targetElPos = {
                    top: shiftHeight[PopoverPlacement.Bottom](),
                    left: shiftWidth['topOrBottomRight']()
                };
                break;
            default:
                targetElPos = {
                    top: hostElPos.top - targetElHeight,
                    left: shiftWidth[pos1]()
                };
                break;
        }
        return targetElPos;
    };
    /**
     * @protected
     * @param {?} nativeEl
     * @return {?}
     */
    PopoverContentComponent.prototype.position = /**
     * @protected
     * @param {?} nativeEl
     * @return {?}
     */
    function (nativeEl) {
        /** @type {?} */
        var offsetParentBCR = { top: 0, left: 0 };
        /** @type {?} */
        var elBCR = this.offset(nativeEl);
        /** @type {?} */
        var offsetParentEl = this.parentOffsetEl(nativeEl);
        if (offsetParentEl !== window.document) {
            offsetParentBCR = this.offset(offsetParentEl);
            offsetParentBCR.top += offsetParentEl.clientTop - offsetParentEl.scrollTop;
            offsetParentBCR.left += offsetParentEl.clientLeft - offsetParentEl.scrollLeft;
        }
        /** @type {?} */
        var boundingClientRect = nativeEl.getBoundingClientRect();
        return {
            width: boundingClientRect.width || nativeEl.offsetWidth,
            height: boundingClientRect.height || nativeEl.offsetHeight,
            top: elBCR.top - offsetParentBCR.top,
            left: elBCR.left - offsetParentBCR.left
        };
    };
    /**
     * @protected
     * @param {?} nativeEl
     * @return {?}
     */
    PopoverContentComponent.prototype.offset = /**
     * @protected
     * @param {?} nativeEl
     * @return {?}
     */
    function (nativeEl) {
        /** @type {?} */
        var boundingClientRect = nativeEl.getBoundingClientRect();
        return {
            width: boundingClientRect.width || nativeEl.offsetWidth,
            height: boundingClientRect.height || nativeEl.offsetHeight,
            top: boundingClientRect.top + (window.pageYOffset || window.document.documentElement.scrollTop),
            left: boundingClientRect.left + (window.pageXOffset || window.document.documentElement.scrollLeft)
        };
    };
    /**
     * @protected
     * @param {?} nativeEl
     * @param {?} cssProp
     * @return {?}
     */
    PopoverContentComponent.prototype.getStyle = /**
     * @protected
     * @param {?} nativeEl
     * @param {?} cssProp
     * @return {?}
     */
    function (nativeEl, cssProp) {
        if (((/** @type {?} */ (nativeEl))).currentStyle) { // IE
            return ((/** @type {?} */ (nativeEl))).currentStyle[cssProp];
        }
        if (window.getComputedStyle) {
            return ((/** @type {?} */ (window.getComputedStyle)))(nativeEl)[cssProp];
        }
        // finally try and get inline style
        return ((/** @type {?} */ (nativeEl.style)))[cssProp];
    };
    /**
     * @protected
     * @param {?} nativeEl
     * @return {?}
     */
    PopoverContentComponent.prototype.isStaticPositioned = /**
     * @protected
     * @param {?} nativeEl
     * @return {?}
     */
    function (nativeEl) {
        return (this.getStyle(nativeEl, 'position') || 'static') === 'static';
    };
    /**
     * @protected
     * @param {?} nativeEl
     * @return {?}
     */
    PopoverContentComponent.prototype.parentOffsetEl = /**
     * @protected
     * @param {?} nativeEl
     * @return {?}
     */
    function (nativeEl) {
        /** @type {?} */
        var offsetParent = nativeEl.offsetParent || window.document;
        while (offsetParent && offsetParent !== window.document && this.isStaticPositioned(offsetParent)) {
            offsetParent = offsetParent.offsetParent;
        }
        return offsetParent || window.document;
    };
    // Check for overflow of the viewport and reflect the position if necessary.
    // Check for overflow of the viewport and reflect the position if necessary.
    /**
     * @protected
     * @param {?} placement
     * @param {?} hostElement
     * @param {?} targetElement
     * @return {?}
     */
    PopoverContentComponent.prototype.getEffectivePlacement = 
    // Check for overflow of the viewport and reflect the position if necessary.
    /**
     * @protected
     * @param {?} placement
     * @param {?} hostElement
     * @param {?} targetElement
     * @return {?}
     */
    function (placement, hostElement, targetElement) {
        /** @type {?} */
        var hostElBoundingRect = hostElement.getBoundingClientRect();
        /** @type {?} */
        var desiredPlacement = placement || PopoverPlacement.Top;
        // Reflect appropriately if overflow.
        if (desiredPlacement === PopoverPlacement.Top) {
            /** @type {?} */
            var isTopOverflow = hostElBoundingRect.top - targetElement.offsetHeight < 0;
            /** @type {?} */
            var isRightOverflow = hostElBoundingRect.left + hostElBoundingRect.width / 2 + targetElement.offsetWidth / 2 > this.windowWidth;
            /** @type {?} */
            var isLeftOverflow = hostElBoundingRect.left + hostElBoundingRect.width / 2 - targetElement.offsetWidth / 2 < 0;
            if (isTopOverflow) {
                return PopoverPlacement.Bottom;
            }
            else if (isRightOverflow) {
                return PopoverPlacement.TopLeft;
            }
            else if (isLeftOverflow) {
                return PopoverPlacement.TopRight;
            }
        }
        if (desiredPlacement === PopoverPlacement.Bottom) {
            /** @type {?} */
            var isRightOverflow = hostElBoundingRect.left + hostElBoundingRect.width / 2 + targetElement.offsetWidth / 2 > this.windowWidth;
            /** @type {?} */
            var isLeftOverflow = hostElBoundingRect.left + hostElBoundingRect.width / 2 - targetElement.offsetWidth / 2 < 0;
            /** @type {?} */
            var isBottomOverflow = hostElBoundingRect.bottom + targetElement.offsetHeight > this.windowHeight;
            if (isBottomOverflow) {
                return PopoverPlacement.Top;
            }
            else if (isRightOverflow) {
                return PopoverPlacement.BottomLeft;
            }
            else if (isLeftOverflow) {
                return PopoverPlacement.BottomRight;
            }
        }
        if (desiredPlacement === PopoverPlacement.Left) {
            /** @type {?} */
            var isTopOverflow = hostElBoundingRect.top + hostElBoundingRect.height / 2 - targetElement.offsetHeight / 2 < 0;
            /** @type {?} */
            var isLeftOverflow = hostElBoundingRect.left - targetElement.offsetWidth < 0;
            /** @type {?} */
            var isBottomOverflow = hostElBoundingRect.top + hostElBoundingRect.height / 2 + targetElement.offsetHeight / 2 > this.windowHeight;
            if (isLeftOverflow) {
                return PopoverPlacement.Right;
            }
            else if (isTopOverflow) {
                return PopoverPlacement.BottomLeft;
            }
            else if (isBottomOverflow) {
                return PopoverPlacement.TopLeft;
            }
        }
        if (desiredPlacement === PopoverPlacement.Right) {
            /** @type {?} */
            var isTopOverflow = hostElBoundingRect.top + hostElBoundingRect.height / 2 - targetElement.offsetHeight / 2 < 0;
            /** @type {?} */
            var isRightOverflow = hostElBoundingRect.right + targetElement.offsetWidth > this.windowWidth;
            /** @type {?} */
            var isBottomOverflow = hostElBoundingRect.top + hostElBoundingRect.height / 2 + targetElement.offsetHeight / 2 > this.windowHeight;
            if (isRightOverflow) {
                return PopoverPlacement.Left;
            }
            else if (isTopOverflow) {
                return PopoverPlacement.BottomRight;
            }
            else if (isBottomOverflow) {
                return PopoverPlacement.TopRight;
            }
        }
        if (desiredPlacement === PopoverPlacement.TopRight) {
            /** @type {?} */
            var isTopOverflow = hostElBoundingRect.top - targetElement.offsetHeight < 0;
            /** @type {?} */
            var isRightOverflow = hostElBoundingRect.right + targetElement.offsetWidth > this.windowWidth;
            if (isTopOverflow && isRightOverflow) {
                return PopoverPlacement.BottomLeft;
            }
            else if (isTopOverflow) {
                return PopoverPlacement.BottomRight;
            }
            else if (isRightOverflow) {
                return PopoverPlacement.TopLeft;
            }
        }
        if (desiredPlacement === PopoverPlacement.TopLeft) {
            /** @type {?} */
            var isTopOverflow = hostElBoundingRect.top - targetElement.offsetHeight < 0;
            /** @type {?} */
            var isLeftOverflow = hostElBoundingRect.left - targetElement.offsetWidth < 0;
            if (isTopOverflow && isLeftOverflow) {
                return PopoverPlacement.BottomRight;
            }
            else if (isTopOverflow) {
                return PopoverPlacement.BottomLeft;
            }
            else if (isLeftOverflow) {
                return PopoverPlacement.TopRight;
            }
        }
        if (desiredPlacement === PopoverPlacement.BottomRight) {
            /** @type {?} */
            var isBottomOverflow = hostElBoundingRect.bottom + targetElement.offsetHeight > this.windowHeight;
            /** @type {?} */
            var isRightOverflow = hostElBoundingRect.right + targetElement.offsetWidth > this.windowWidth;
            if (isBottomOverflow && isRightOverflow) {
                return PopoverPlacement.TopLeft;
            }
            else if (isBottomOverflow) {
                return PopoverPlacement.TopRight;
            }
            else if (isRightOverflow) {
                return PopoverPlacement.BottomLeft;
            }
        }
        if (desiredPlacement === PopoverPlacement.BottomLeft) {
            /** @type {?} */
            var isBottomOverflow = hostElBoundingRect.bottom + targetElement.offsetHeight > this.windowHeight;
            /** @type {?} */
            var isLeftOverflow = hostElBoundingRect.left - targetElement.offsetWidth < 0;
            if (isBottomOverflow && isLeftOverflow) {
                return PopoverPlacement.TopRight;
            }
            else if (isBottomOverflow) {
                return PopoverPlacement.TopLeft;
            }
            else if (isLeftOverflow) {
                return PopoverPlacement.BottomRight;
            }
        }
        return desiredPlacement;
    };
    PopoverContentComponent.decorators = [
        { type: Component, args: [{
                    selector: 'popover-content',
                    template: "\n    <div #popoverDiv\n        class=\"bs-popover-{{ effectivePlacement }} popover-content popover {{ parentClass }}\"\n        [ngClass]=\"{\n            'sm': size === 'small',\n            'md-sm': size === 'medium-small',\n            'md': size === 'medium',\n            'lg': size === 'large'\n        }\"\n        [style.top.px]=\"top\"\n        [style.left.px]=\"left\"\n        [style.transition]=\"(transitionEnabled ? '0.15s opacity' : '')\"\n        [style.opacity]=\"opacity\"\n        [style.display]=\"'block'\"\n        [class.in]=\"isIn\"\n        role=\"popover\">\n            <div [hidden]=\"!closeOnMouseOutside\" class=\"virtual-area\"></div>\n            <div class=\"arrow\"></div>\n            <div class=\"popover-header\" [hidden]=\"!title\">{{ title }}</div>\n            <div class=\"popover-body\">\n                <ng-content></ng-content>\n                {{ content }}\n            </div>\n    </div>\n    "
                }] }
    ];
    /** @nocollapse */
    PopoverContentComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: ChangeDetectorRef },
        { type: Renderer2 }
    ]; };
    PopoverContentComponent.propDecorators = {
        content: [{ type: Input }],
        placement: [{ type: Input }],
        title: [{ type: Input }],
        parentClass: [{ type: Input }],
        animation: [{ type: Input }],
        closeOnClickOutside: [{ type: Input }],
        closeOnMouseOutside: [{ type: Input }],
        appendToBody: [{ type: Input }],
        size: [{ type: Input }],
        popoverDiv: [{ type: ViewChild, args: ['popoverDiv',] }]
    };
    return PopoverContentComponent;
}());
export { PopoverContentComponent };
if (false) {
    /** @type {?} */
    PopoverContentComponent.prototype.content;
    /** @type {?} */
    PopoverContentComponent.prototype.placement;
    /** @type {?} */
    PopoverContentComponent.prototype.title;
    /** @type {?} */
    PopoverContentComponent.prototype.parentClass;
    /** @type {?} */
    PopoverContentComponent.prototype.animation;
    /** @type {?} */
    PopoverContentComponent.prototype.closeOnClickOutside;
    /** @type {?} */
    PopoverContentComponent.prototype.closeOnMouseOutside;
    /** @type {?} */
    PopoverContentComponent.prototype.appendToBody;
    /** @type {?} */
    PopoverContentComponent.prototype.size;
    /** @type {?} */
    PopoverContentComponent.prototype.popoverDiv;
    /** @type {?} */
    PopoverContentComponent.prototype.popover;
    /** @type {?} */
    PopoverContentComponent.prototype.onCloseFromOutside;
    /** @type {?} */
    PopoverContentComponent.prototype.top;
    /** @type {?} */
    PopoverContentComponent.prototype.left;
    /** @type {?} */
    PopoverContentComponent.prototype.isIn;
    /** @type {?} */
    PopoverContentComponent.prototype.displayType;
    /** @type {?} */
    PopoverContentComponent.prototype.effectivePlacement;
    /** @type {?} */
    PopoverContentComponent.prototype.opacity;
    /** @type {?} */
    PopoverContentComponent.prototype.transitionEnabled;
    /** @type {?} */
    PopoverContentComponent.prototype.windowWidth;
    /** @type {?} */
    PopoverContentComponent.prototype.windowHeight;
    /** @type {?} */
    PopoverContentComponent.prototype.listenClickFunc;
    /** @type {?} */
    PopoverContentComponent.prototype.listenMouseFunc;
    /** @type {?} */
    PopoverContentComponent.prototype.listenTouchFunc;
    /**
     * Closes dropdown if user clicks outside of this directive.
     * @type {?}
     */
    PopoverContentComponent.prototype.onDocumentMouseDown;
    /**
     * @type {?}
     * @protected
     */
    PopoverContentComponent.prototype.element;
    /**
     * @type {?}
     * @protected
     */
    PopoverContentComponent.prototype.cdr;
    /**
     * @type {?}
     * @protected
     */
    PopoverContentComponent.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,